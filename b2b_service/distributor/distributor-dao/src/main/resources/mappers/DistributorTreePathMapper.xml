<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bat.distributor.dao.distributor.DistributorTreePathMapper">
    <resultMap id="BaseResultMap" type="com.bat.distributor.dao.distributor.dataobject.DistributorTreePathDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="distributor_ancestor_id" jdbcType="INTEGER" property="distributorAncestorId"/>
        <result column="distributor_descendant_id" jdbcType="INTEGER" property="distributorDescendantId"/>
        <result column="tree_node" jdbcType="INTEGER" property="treeNode"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from distributor_tree_path
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.bat.distributor.dao.distributor.dataobject.DistributorTreePathDO">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into distributor_tree_path (distributor_ancestor_id, distributor_descendant_id,
        tree_node)
        values (#{distributorAncestorId,jdbcType=INTEGER}, #{distributorDescendantId,jdbcType=INTEGER},
        #{treeNode,jdbcType=INTEGER})
    </insert>

    <insert id="insertList" parameterType="java.util.List">
        insert into distributor_tree_path (distributor_ancestor_id, distributor_descendant_id,
        tree_node)
        values
        <foreach item="item" collection="list" separator=",">
            (
            #{item.distributorAncestorId,jdbcType=INTEGER},
            #{item.distributorDescendantId,jdbcType=INTEGER},
            #{item.treeNode,jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <update id="updateByPrimaryKey"
            parameterType="com.bat.distributor.dao.distributor.dataobject.DistributorTreePathDO">
    update distributor_tree_path
    set distributor_ancestor_id = #{distributorAncestorId,jdbcType=INTEGER},
      distributor_descendant_id = #{distributorDescendantId,jdbcType=INTEGER},
      tree_node = #{treeNode,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, distributor_ancestor_id, distributor_descendant_id, tree_node
    from distributor_tree_path
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, distributor_ancestor_id, distributor_descendant_id, tree_node
    from distributor_tree_path
  </select>
    <select id="listByDistributorDescendantId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, distributor_ancestor_id, distributor_descendant_id, tree_node
    from distributor_tree_path where distributor_descendant_id = #{distributorDescendantId,jdbcType=INTEGER}
  </select>

    <select id="selectByDistributorDescendantIdAndTreeNode" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, distributor_ancestor_id, distributor_descendant_id, tree_node
    from distributor_tree_path
    where distributor_descendant_id = #{distributorDescendantId,jdbcType=INTEGER} and tree_node = #{treeNode,jdbcType=INTEGER}
  </select>

    <select id="listByDistributorDescendantIds" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, distributor_ancestor_id, distributor_descendant_id, tree_node
        from distributor_tree_path
        where distributor_descendant_id in
        <foreach collection="distributorDescendantIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>