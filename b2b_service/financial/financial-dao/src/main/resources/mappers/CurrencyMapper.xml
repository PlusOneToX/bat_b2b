<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bat.financial.dao.basesetting.CurrencyMapper">
    <resultMap id="BaseResultMap" type="com.bat.financial.dao.basesetting.dataobject.CurrencyDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="currency_code" jdbcType="VARCHAR" property="currencyCode"/>
        <result column="money_accuracy" jdbcType="SMALLINT" property="moneyAccuracy"/>
        <result column="erp_no" jdbcType="VARCHAR" property="erpNo"/>
        <result column="open_flag" jdbcType="SMALLINT" property="openFlag"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, currency_code, money_accuracy, erp_no, open_flag, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from currency
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="listAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from currency
    </select>
    <select id="getByErpNo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from currency
        where erp_no = #{erpNo,jdbcType=VARCHAR}
    </select>
    <select id="getByCurrencyCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from currency
        where currency_code = #{currencyCode,jdbcType=VARCHAR}
    </select>
    <select id="getCurrencyByErpNo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from currency
        where erp_no = #{erpNo,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from currency
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.bat.financial.dao.basesetting.dataobject.CurrencyDO">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into currency (name, currency_code, money_accuracy,
        erp_no, open_flag, create_time,
        update_time)
        values (#{name,jdbcType=VARCHAR}, #{currencyCode,jdbcType=VARCHAR}, #{moneyAccuracy,jdbcType=SMALLINT},
        #{erpNo,jdbcType=VARCHAR}, #{openFlag,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.bat.financial.dao.basesetting.dataobject.CurrencyDO">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into currency
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="currencyCode != null">
                currency_code,
            </if>
            <if test="moneyAccuracy != null">
                money_accuracy,
            </if>
            <if test="erpNo != null">
                erp_no,
            </if>
            <if test="openFlag != null">
                open_flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="currencyCode != null">
                #{currencyCode,jdbcType=VARCHAR},
            </if>
            <if test="moneyAccuracy != null">
                #{moneyAccuracy,jdbcType=SMALLINT},
            </if>
            <if test="erpNo != null">
                #{erpNo,jdbcType=VARCHAR},
            </if>
            <if test="openFlag != null">
                #{openFlag,jdbcType=SMALLINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.bat.financial.dao.basesetting.dataobject.CurrencyDO">
        update currency
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="currencyCode != null">
                currency_code = #{currencyCode,jdbcType=VARCHAR},
            </if>
            <if test="moneyAccuracy != null">
                money_accuracy = #{moneyAccuracy,jdbcType=SMALLINT},
            </if>
            <if test="erpNo != null">
                erp_no = #{erpNo,jdbcType=VARCHAR},
            </if>
            <if test="openFlag != null">
                open_flag = #{openFlag,jdbcType=SMALLINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bat.financial.dao.basesetting.dataobject.CurrencyDO">
        update currency
        set name           = #{name,jdbcType=VARCHAR},
            currency_code  = #{currencyCode,jdbcType=VARCHAR},
            money_accuracy = #{moneyAccuracy,jdbcType=SMALLINT},
            erp_no         = #{erpNo,jdbcType=VARCHAR},
            open_flag      = #{openFlag,jdbcType=SMALLINT},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            update_time    = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>