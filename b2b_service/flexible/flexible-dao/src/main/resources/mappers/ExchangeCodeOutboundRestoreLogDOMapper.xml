<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bat.flexible.dao.exchange.ExchangeCodeOutboundRestoreLogDOMapper" >
  <resultMap id="BaseResultMap" type="com.bat.flexible.dao.exchange.dataobject.ExchangeCodeOutboundRestoreLogDO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="box_code" property="boxCode" jdbcType="VARCHAR" />
    <result column="new_outbound_no" property="newOutboundNo" jdbcType="VARCHAR" />
    <result column="old_outbound_no" property="oldOutboundNo" jdbcType="VARCHAR" />
    <result column="distributor_order_id" property="distributorOrderId" jdbcType="INTEGER" />
    <result column="distributor_order_goods_id" property="distributorOrderGoodsId" jdbcType="INTEGER" />
    <result column="distributor_id" property="distributorId" jdbcType="INTEGER" />
    <result column="distributor_name" property="distributorName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, box_code, new_outbound_no, old_outbound_no, distributor_order_id, distributor_order_goods_id, 
    distributor_id, distributor_name, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exchange_code_outbound_restore_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exchange_code_outbound_restore_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bat.flexible.dao.exchange.dataobject.ExchangeCodeOutboundRestoreLogDO" useGeneratedKeys="true" keyProperty="id">
    insert into exchange_code_outbound_restore_log (id, box_code, new_outbound_no, 
      old_outbound_no, distributor_order_id, distributor_order_goods_id, 
      distributor_id, distributor_name, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{boxCode,jdbcType=VARCHAR}, #{newOutboundNo,jdbcType=VARCHAR}, 
      #{oldOutboundNo,jdbcType=VARCHAR}, #{distributorOrderId,jdbcType=INTEGER}, #{distributorOrderGoodsId,jdbcType=INTEGER}, 
      #{distributorId,jdbcType=INTEGER}, #{distributorName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bat.flexible.dao.exchange.dataobject.ExchangeCodeOutboundRestoreLogDO" useGeneratedKeys="true" keyProperty="id" >
    insert into exchange_code_outbound_restore_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="boxCode != null" >
        box_code,
      </if>
      <if test="newOutboundNo != null" >
        new_outbound_no,
      </if>
      <if test="oldOutboundNo != null" >
        old_outbound_no,
      </if>
      <if test="distributorOrderId != null" >
        distributor_order_id,
      </if>
      <if test="distributorOrderGoodsId != null" >
        distributor_order_goods_id,
      </if>
      <if test="distributorId != null" >
        distributor_id,
      </if>
      <if test="distributorName != null" >
        distributor_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="boxCode != null" >
        #{boxCode,jdbcType=VARCHAR},
      </if>
      <if test="newOutboundNo != null" >
        #{newOutboundNo,jdbcType=VARCHAR},
      </if>
      <if test="oldOutboundNo != null" >
        #{oldOutboundNo,jdbcType=VARCHAR},
      </if>
      <if test="distributorOrderId != null" >
        #{distributorOrderId,jdbcType=INTEGER},
      </if>
      <if test="distributorOrderGoodsId != null" >
        #{distributorOrderGoodsId,jdbcType=INTEGER},
      </if>
      <if test="distributorId != null" >
        #{distributorId,jdbcType=INTEGER},
      </if>
      <if test="distributorName != null" >
        #{distributorName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bat.flexible.dao.exchange.dataobject.ExchangeCodeOutboundRestoreLogDO" >
    update exchange_code_outbound_restore_log
    <set >
      <if test="boxCode != null" >
        box_code = #{boxCode,jdbcType=VARCHAR},
      </if>
      <if test="newOutboundNo != null" >
        new_outbound_no = #{newOutboundNo,jdbcType=VARCHAR},
      </if>
      <if test="oldOutboundNo != null" >
        old_outbound_no = #{oldOutboundNo,jdbcType=VARCHAR},
      </if>
      <if test="distributorOrderId != null" >
        distributor_order_id = #{distributorOrderId,jdbcType=INTEGER},
      </if>
      <if test="distributorOrderGoodsId != null" >
        distributor_order_goods_id = #{distributorOrderGoodsId,jdbcType=INTEGER},
      </if>
      <if test="distributorId != null" >
        distributor_id = #{distributorId,jdbcType=INTEGER},
      </if>
      <if test="distributorName != null" >
        distributor_name = #{distributorName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bat.flexible.dao.exchange.dataobject.ExchangeCodeOutboundRestoreLogDO" >
    update exchange_code_outbound_restore_log
    set box_code = #{boxCode,jdbcType=VARCHAR},
      new_outbound_no = #{newOutboundNo,jdbcType=VARCHAR},
      old_outbound_no = #{oldOutboundNo,jdbcType=VARCHAR},
      distributor_order_id = #{distributorOrderId,jdbcType=INTEGER},
      distributor_order_goods_id = #{distributorOrderGoodsId,jdbcType=INTEGER},
      distributor_id = #{distributorId,jdbcType=INTEGER},
      distributor_name = #{distributorName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>