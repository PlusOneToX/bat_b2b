# Nacos\u5e2e\u52a9\u6587\u6863: https://nacos.io/zh-cn/docs/concepts.html
# Nacos\u8ba4\u8bc1\u4fe1\u606f
spring.cloud.nacos.discovery.username=nacos
spring.cloud.nacos.discovery.password=bat2019
# \u5982\u679c\u9009\u62e9\u56fa\u5b9aIp\u6ce8\u518c\u53ef\u4ee5\u914d\u7f6e
spring.cloud.nacos.discovery.ip=127.0.0.1
# Nacos \u670d\u52a1\u53d1\u73b0\u4e0e\u6ce8\u518c\u914d\u7f6e\uff0c\u5176\u4e2d\u5b50\u5c5e\u6027 server-addr \u6307\u5b9a Nacos \u670d\u52a1\u5668\u4e3b\u673a\u548c\u7aef\u53e3
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
# \u6ce8\u518c\u5230 nacos \u7684\u6307\u5b9a namespace\uff0c\u9ed8\u8ba4\u4e3a public
spring.cloud.nacos.discovery.namespace=DS-test
# dubbo \u534f\u8bae
dubbo.protocol.id=dubbo
dubbo.protocol.name=dubbo
#dubbo.protocol.host=127.0.0.1
# dubbo \u534f\u8bae\u7aef\u53e3\uff08 -1 \u8868\u793a\u81ea\u589e\u7aef\u53e3\uff0c\u4ece 20880 \u5f00\u59cb\uff09
dubbo.protocol.port=20888
# Dubbo \u6d88\u8d39\u7aef\u8ba2\u9605\u670d\u52a1\u7aef\u7684\u5e94\u7528\u540d\uff0c\u591a\u4e2a\u670d\u52a1\u63d0\u4f9b\u8005\u7528\u9017\u53f7\u5206\u9694
# \u8fd9\u91cc\u8ba2\u9605"\u81ea\u5df1"\uff0c\u4f1a\u88ab\u5ffd\u7565\u6389\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u6dfb\u52a0
dubbo.cloud.subscribed-services=flexible-service
dubbo.registry.protocol=nacos
dubbo.registry.address=127.0.0.1:8848
dubbo.registry.parameters.namespace=DS-test
# dubbo \u670d\u52a1\u626b\u63cf\u57fa\u51c6\u5305
dubbo.scan.base-packages=com.bat.flexible
# Sentinel \u63a7\u5236\u53f0\u5730\u5740
spring.cloud.sentinel.transport.dashboard=localhost:8080
# \u53d6\u6d88Sentinel\u63a7\u5236\u53f0\u61d2\u52a0\u8f7d
# \u9ed8\u8ba4\u60c5\u51b5\u4e0b Sentinel \u4f1a\u5728\u5ba2\u6237\u7aef\u9996\u6b21\u8c03\u7528\u7684\u65f6\u5019\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5f00\u59cb\u5411\u63a7\u5236\u53f0\u53d1\u9001\u5fc3\u8df3\u5305
# \u914d\u7f6e sentinel.eager=true \u65f6\uff0c\u53d6\u6d88Sentinel\u63a7\u5236\u53f0\u61d2\u52a0\u8f7d\u529f\u80fd
spring.cloud.sentinel.eager=true
# \u5982\u679c\u6709\u591a\u5957\u7f51\u7edc\uff0c\u53c8\u65e0\u6cd5\u6b63\u786e\u83b7\u53d6\u672c\u673aIP\uff0c\u5219\u9700\u8981\u4f7f\u7528\u4e0b\u9762\u7684\u53c2\u6570\u8bbe\u7f6e\u5f53\u524d\u673a\u5668\u53ef\u88ab\u5916\u90e8\u8bbf\u95ee\u7684IP\u5730\u5740\uff0c\u4f9badmin\u63a7\u5236\u53f0\u4f7f\u7528
# spring.cloud.sentinel.transport.client-ip=
# \u6570\u636e\u5e93\u9a71\u52a8\uff1a
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# \u6570\u636e\u6e90\u540d\u79f0
spring.datasource.name=flexible_db
# \u6570\u636e\u5e93\u8fde\u63a5\u5730\u5740
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/flexible_db_100?serverTimezone=UTC&allowMultiQueries=true
# \u6570\u636e\u5e93\u7528\u6237\u540d&\u5bc6\u7801\uff1a
spring.datasource.username=root
spring.datasource.password=bat2019
## Format to use when serializing Date objects.
#spring.gson.date-format=
#
## Whether to disable the escaping of HTML characters such as '<', '>', etc.
#spring.gson.disable-html-escaping=
#
## Whether to exclude inner classes during serialization.
#spring.gson.disable-inner-class-serialization=
#
## Whether to enable serialization of complex map keys (i.e. non-primitives).
#spring.gson.enable-complex-map-key-serialization= # Whether to enable serialization of complex map keys (i.e. non-primitives).
#
## Whether to exclude all fields from consideration for serialization or deserialization that do not have the "Expose" annotation.
#spring.gson.exclude-fields-without-expose-annotation=
#
## Naming policy that should apply to an object's field during serialization and deserialization.
#spring.gson.field-naming-policy=
#
## Whether to generate non executable JSON by prefixing the output with some special text.
#spring.gson.generate-non-executable-json=
#
## Whether to be lenient about parsing JSON that doesn't conform to RFC 4627.
#spring.gson.lenient=
#
## Serialization policy for Long and long types.
#spring.gson.long-serialization-policy=
#
## Whether to output serialized JSON that fits in a page for pretty printing.
#spring.gson.pretty-printing=
#
## Whether to serialize null fields.
#spring.gson.serialize-nulls=
#swagger\u5f00\u542f\u4e0e\u5173\u95ed
springfox.documentation.swagger-ui.enabled=true
# Rocketmq\u914d\u7f6e
spring.cloud.stream.rocketmq.binder.name-server=127.0.0.1:9876
spring.cloud.bus.id=${spring.application.name}:${server.port}
# seata\u914d\u7f6e
# arthas\u914d\u7f6e
#arthas.http-port=8092
#arthas.telnet-port=8052
#\u5e97\u94fa\u7ba1\u7406 \u5fae\u4fe1
shop.wxurl=http://test.bat.com.cn/diy/index?platform={0}&distributorId={1}&appid={2}
#\u5b57\u4f53\u73af\u5883\u8def\u5f84
font.path=/usr/share/fonts/myfonts/SourceHanSansCN-Bold.ttf
## \u79c1\u94a5\u3001\u4efb\u4f55\u4eba\u4e0d\u5f97\u4fee\u6539\u8be5\u503c
aes.key=125185114551541414151111113118890111122141111aaajaiajqjq11122211521111112ff2222223344555555555555555555555huahajajjajajahahgagagagauahahajairenh58744122dankaj11654a
canva.apiKeyId=7fyFZMishUEZeNTQ68POjxHv
canva.apiSecretKey=vhdIv6eZOIE25HIWoO-oQIHEEWSWzBlT
#\u5e97\u94fa\u7ba1\u7406 \u540e\u53f0\u6a21\u677f\u4e0b\u8f7d
shop.importShop1=import/Shop1V1.xls
#\u5e97\u94fa\u7ba1\u7406 \u524d\u53f0\u6a21\u677f\u4e0b\u8f7d
shop.importShop2=import/Shop2V1.xls
#\u5151\u6362\u5361\u9ed8\u8ba4\u7684\u5206\u9500\u5546\u3001\u8d60\u5361\u6307\u5b9a\u8be5\u5206\u9500\u5546id\u8fd0\u8425
exchange.distributorId.default=2601
exchange.distributorName.default=
exchange.distributorCompanyName.default=
### \u4e2d\u56fd\u7684\u56fd\u5bb6id (\u5173\u8054\u7701\u5e02\u533a\u7684\u56fd\u5bb6id)
country.china.id=37
### \u5206\u9500\u5546ID\uff08\u4e09\u661f\uff09
distributor.id.sanxing=2529
### \u70ab\u5f69\u80a4\u611f\u58f3\u6750\u8d28id
material.skin.id=107
### \u771f\u5f69\u521b\u610f\u58f3\u6750\u8d28id
material.true.color.id=83
### \u4eae\u900f\u5f69\u5370\u8f6f\u58f3\u6750\u8d28id
material.soft.shell.id=80
### \u6676\u900f\u6d6e\u96d5\u58f3\u6750\u8d28id
material.relief.id=77
#\u82cf\u5b81\u5206\u9500\u5546id
suning.distributor.id=7252