<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bat.goods.dao.brand.BrandMapper">
    <resultMap id="BrandMapper" type="com.bat.goods.dao.brand.dataobject.BrandDO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="name_en" property="nameEn" jdbcType="VARCHAR"/>
        <result column="logo" property="logo" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="open_flag" property="openFlag" jdbcType="SMALLINT"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="distributor_scope" property="distributorScope" jdbcType="SMALLINT"/>
        <result column="distributor_scope_no" property="distributorScopeNo" jdbcType="SMALLINT"/>
        <result column="create_time" property="createTime" jdbcType="DATE"/>
        <result column="update_time" property="updateTime" jdbcType="DATE"/>
    </resultMap>
    <resultMap id="UserBrandDOMapper" type="com.bat.goods.dao.brand.dataobject.UserBrandDO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="name_en" property="nameEn" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="brand_columns">
        id,
        name,
        name_en,
        logo,
        description,
        open_flag,
        sort,
        distributor_scope,
        distributor_scope_no,
        create_time,
        update_time
    </sql>

    <sql id="brand_select">
        SELECT
        <include refid="brand_columns"/>
        FROM brand
    </sql>

    <insert id="createBrand" parameterType="com.bat.goods.dao.brand.dataobject.BrandDO" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO brand(
        <include refid="brand_columns"/>
        ) VALUES (
        #{id},
        #{name},
        #{nameEn},
        #{logo},
        #{description},
        #{openFlag},
        #{sort},
        #{distributorScope},
        #{distributorScopeNo},
        #{createTime},
        #{updateTime}
        )
    </insert>

    <insert id="createBrands" parameterType="java.util.List">
        INSERT INTO brand(
        <include refid="brand_columns"/>
        ) VALUES
        <foreach item="item" collection="list" separator=",">
            (
            #{item.id},
            #{item.name},
            #{item.nameEn},
            #{item.logo},
            #{item.description},
            #{item.openFlag},
            #{item.sort},
            #{item.distributorScope},
            #{item.distributorScopeNo},
            #{item.createTime},
            #{item.updateTime}
            )
        </foreach>
    </insert>

    <select id="listBrand" resultMap="BrandMapper" parameterType="map">
        <include refid="brand_select"/>
        WHERE 1=1
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(content)">
            and name like concat(concat('%',#{content}),'%')
        </if>
        <if test="openFlag != null">
            and open_flag = #{openFlag}
        </if>
        <if test="ids != null and ids.size() > 0">
            and id in
            <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by sort asc,update_time desc
    </select>

    <select id="listBrandByBrandIds" resultMap="BrandMapper" parameterType="map">
        <include refid="brand_select"/>
        WHERE id in
        <foreach collection="brandIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="listByAllDistributor" resultType="java.lang.Integer">
        select id from brand WHERE distributor_scope = 1
    </select>


    <select id="listBrandByDistributorId" resultMap="UserBrandDOMapper" parameterType="map">
        select id,name,name_en from brand b
        WHERE b.open_flag=1
        <if test="brandIds != null and brandIds.size() > 0">
            and (case when b.distributor_scope <![CDATA[ <> ]]> 1 then b.id in
            <foreach collection="brandIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            else 1 end)
        </if>
        <if test="brandIds == null or brandIds.size() == 0">
            and b.distributor_scope = 1
        </if>
        order by b.sort asc,b.update_time desc
    </select>


    <select id="listCount" resultType="int" parameterType="map">
        select count(1) FROM brand
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(content)">
            WHERE name like concat(concat('%',#{content}),'%')
        </if>
    </select>


    <select id="getById" resultMap="BrandMapper" parameterType="map">
        <include refid="brand_select"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <update id="updateBrand" parameterType="com.bat.goods.dao.brand.dataobject.BrandDO" useGeneratedKeys="true"
            keyProperty="id">
        UPDATE brand SET name_en = #{nameEn}
        ,logo = #{logo}
        ,description = #{description}
        <if test="name != null">
            ,name = #{name}
        </if>
        <if test="openFlag != null">
            ,open_flag = #{openFlag}
        </if>
        <if test="sort != null">
            ,sort = #{sort}
        </if>
        <if test="distributorScope != null">
            ,distributor_scope = #{distributorScope}
        </if>
        <if test="distributorScopeNo != null">
            ,distributor_scope_no = #{distributorScopeNo}
        </if>
        <if test="updateTime != null">
            ,update_time = #{updateTime}
        </if>
        where id = #{id}
    </update>

    <update id="openBrand" parameterType="map">
        UPDATE brand SET open_flag = #{openFlag} where id = #{id}
    </update>

    <delete id="deleteBrand" parameterType="map">
        DELETE FROM brand WHERE id = #{id}
    </delete>
    <!-- 品牌等级关系维护 -->
    <insert id="createBrandScalePriceRelevanceList" parameterType="java.util.List">
        INSERT INTO brand_scale_price_relevance(
        brand_id,
        scale_price_id
        ) VALUES
        <foreach item="item" collection="list" separator=",">
            (
            #{item.brandId},
            #{item.scalePriceId}
            )
        </foreach>
    </insert>

    <select id="listBrandScalePriceRelevanceId" resultType="int" parameterType="map">
        select scale_price_id FROM brand_scale_price_relevance WHERE brand_id = #{brandId}
    </select>

    <delete id="deleteBrandScalePriceRelevance" parameterType="map">
        DELETE FROM brand_scale_price_relevance WHERE brand_id = #{brandId}
    </delete>

    <insert id="createBrandScalePriceRelevanceNoList" parameterType="java.util.List">
        INSERT INTO brand_scale_price_relevance_no(
        brand_id,
        scale_price_id
        ) VALUES
        <foreach item="item" collection="list" separator=",">
            (
            #{item.brandId},
            #{item.scalePriceId}
            )
        </foreach>
    </insert>

    <select id="listBrandScalePriceRelevanceIdNo" resultType="int" parameterType="map">
        select scale_price_id FROM brand_scale_price_relevance_no WHERE brand_id = #{brandId}
    </select>

    <delete id="deleteBrandScalePriceRelevanceNo" parameterType="map">
        DELETE FROM brand_scale_price_relevance_no WHERE brand_id = #{brandId}
    </delete>
    <!-- 品牌销售部门关系维护 -->
    <insert id="createBrandDepartmentRelevanceList" parameterType="java.util.List">
        INSERT INTO brand_department_relevance(
        brand_id,
        department_id
        ) VALUES
        <foreach item="item" collection="list" separator=",">
            (
            #{item.brandId},
            #{item.departmentId}
            )
        </foreach>
    </insert>

    <select id="listBrandDepartmentRelevanceId" resultType="int" parameterType="map">
        select department_id FROM brand_department_relevance WHERE brand_id = #{brandId}
    </select>

    <delete id="deleteBrandDepartmentRelevance" parameterType="map">
        DELETE FROM brand_department_relevance WHERE brand_id = #{brandId}
    </delete>

    <insert id="createBrandDepartmentRelevanceNoList" parameterType="java.util.List">
        INSERT INTO brand_department_relevance_no(
        brand_id,
        department_id
        ) VALUES
        <foreach item="item" collection="list" separator=",">
            (
            #{item.brandId},
            #{item.departmentId}
            )
        </foreach>
    </insert>

    <select id="listBrandDepartmentRelevanceIdNo" resultType="int" parameterType="map">
        select department_id FROM brand_department_relevance_no WHERE brand_id = #{brandId}
    </select>

    <delete id="deleteBrandDepartmentRelevanceNo" parameterType="map">
        DELETE FROM brand_department_relevance_no WHERE brand_id = #{brandId}
    </delete>

    <!-- 品牌业务员关系维护 -->
    <insert id="createBrandAdminRelevanceList" parameterType="java.util.List">
        INSERT INTO brand_admin_relevance(
        brand_id,
        admin_id
        ) VALUES
        <foreach item="item" collection="list" separator=",">
            (
            #{item.brandId},
            #{item.adminId}
            )
        </foreach>
    </insert>

    <select id="listBrandAdminRelevanceId" resultType="int" parameterType="map">
        select admin_id FROM brand_admin_relevance WHERE brand_id = #{brandId}
    </select>

    <delete id="deleteBrandAdminRelevance" parameterType="map">
        DELETE FROM brand_admin_relevance WHERE brand_id = #{brandId}
    </delete>

    <insert id="createBrandAdminRelevanceNoList" parameterType="java.util.List">
        INSERT INTO brand_admin_relevance_no(
        brand_id,
        admin_id
        ) VALUES
        <foreach item="item" collection="list" separator=",">
            (
            #{item.brandId},
            #{item.adminId}
            )
        </foreach>
    </insert>

    <select id="listBrandAdminRelevanceIdNo" resultType="int" parameterType="map">
        select admin_id FROM brand_admin_relevance_no WHERE brand_id = #{brandId}
    </select>

    <delete id="deleteBrandAdminRelevanceNo" parameterType="map">
        DELETE FROM brand_admin_relevance_no WHERE brand_id = #{brandId}
    </delete>

    <!-- 品牌分销商关系维护 -->
    <insert id="createBrandDistributorRelevanceList" parameterType="java.util.List">
        INSERT INTO brand_distributor_relevance(
        brand_id,
        distributor_id
        ) VALUES
        <foreach item="item" collection="list" separator=",">
            (
            #{item.brandId},
            #{item.distributorId}
            )
        </foreach>
    </insert>

    <insert id="createBrandDistributorRelevance"
            parameterType="com.bat.goods.dao.brand.dataobject.BrandDistributorRelevanceDO">
        INSERT INTO brand_distributor_relevance(
        brand_id,
        distributor_id
        ) VALUES
            (
            #{brandId},
            #{distributorId}
            )
    </insert>

    <select id="listBrandDistributorRelevanceId" resultType="int" parameterType="map">
        select distributor_id FROM brand_distributor_relevance WHERE brand_id = #{brandId}
    </select>

    <select id="listBrandIdByDistributorId" resultType="int" parameterType="map">
        select brand_id FROM brand_distributor_relevance WHERE distributor_id = #{distributorId}
    </select>

    <delete id="deleteBrandDistributorRelevance" parameterType="map">
        DELETE FROM brand_distributor_relevance WHERE brand_id = #{brandId}
    </delete>

    <delete id="deleteBrandDistributorRelevanceByDistributorId" parameterType="map">
        DELETE FROM brand_distributor_relevance WHERE distributor_id = #{distributorId}
    </delete>

    <insert id="createBrandDistributorRelevanceNoList" parameterType="java.util.List">
        INSERT INTO brand_distributor_relevance_no(
        brand_id,
        distributor_id
        ) VALUES
        <foreach item="item" collection="list" separator=",">
            (
            #{item.brandId},
            #{item.distributorId}
            )
        </foreach>
    </insert>

    <select id="listBrandDistributorRelevanceIdNo" resultType="int" parameterType="map">
        select distributor_id FROM brand_distributor_relevance_no WHERE brand_id = #{brandId}
    </select>
    <delete id="deleteBrandDistributorRelevanceNo" parameterType="map">
        DELETE FROM brand_distributor_relevance_no WHERE brand_id = #{brandId}
    </delete>

    <delete id="deleteBrandDistributorRelevanceNoByDistributorId" parameterType="map">
        DELETE FROM brand_distributor_relevance_no WHERE brand_id = #{brandId} and distributor_id = #{distributorId}
    </delete>

    <delete id="deleteBrandDistributorRelevanceByDistributorIdAndBrandId" parameterType="map">
        DELETE FROM brand_distributor_relevance WHERE brand_id = #{brandId} and distributor_id = #{distributorId}
    </delete>

    <select id="getBrandGoodsCount" resultType="int" parameterType="map">
        select count(1) FROM goods WHERE brand_id = #{brandId}
    </select>

</mapper>
